GDPC
res://.import/Player.png-3b381e068d1d74cc2895fb9be41402b0.stex
res://.import/Track.png-fed121f0a31352199537697db8c96450.stex
res://Environment.tscn
res://KinematicBody2D.gd
res://Main.tscn
res://Player.png.import
res://Player.tscn
res://Track.png.import
res://icon.png
res://project.binary
[gd_scene load_steps=8 format=2]
[ext_resource path="res://Track.png" type="Texture" id=1]
[sub_resource type="ConvexPolygonShape2D" id=1]
points = PoolVector2Array( 0, 0, 64, 0, 64, 64, 0, 64 )
[sub_resource type="ConvexPolygonShape2D" id=2]
points = PoolVector2Array( 0, 0, 64, 64, 64, 64, 0, 64 )
[sub_resource type="ConvexPolygonShape2D" id=3]
points = PoolVector2Array( 0, 64, 64, 0, 64, 64, 0, 64 )
[sub_resource type="ConvexPolygonShape2D" id=4]
points = PoolVector2Array( 0, 0, 64, 0, 64, 64, 0, 64 )
[sub_resource type="ConvexPolygonShape2D" id=5]
points = PoolVector2Array( 0, 0, 64, 0, 64, 64, 0, 64 )
[sub_resource type="TileSet" id=6]
0/name = "Track.png 0"
0/texture = ExtResource( 1 )
0/tex_offset = Vector2( 0, 0 )
0/modulate = Color( 1, 1, 1, 1 )
0/region = Rect2( 0, 0, 64, 320 )
0/tile_mode = 2
0/autotile/icon_coordinate = Vector2( 0, 0 )
0/autotile/tile_size = Vector2( 64, 64 )
0/autotile/spacing = 0
0/autotile/occluder_map = [  ]
0/autotile/navpoly_map = [  ]
0/autotile/z_index_map = [  ]
0/occluder_offset = Vector2( 0, 0 )
0/navigation_offset = Vector2( 0, 0 )
0/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 1 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 0, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 2 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 0, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 3 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 0, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 4 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 0, 4 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 5 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
0/z_index = 0
[node name="Environment" type="Node2D"]
[node name="TileMap" type="TileMap" parent="."]
tile_set = SubResource( 6 )
format = 1
tile_data = PoolIntArray( -65536, 0, 196608, -65535, 0, 196608, -65534, 0, 196608, -65533, 0, 196608, -65532, 0, 196608, -65531, 0, 196608, -65530, 0, 196608, -65529, 0, 196608, -65528, 0, 196608, -65527, 0, 196608, -65526, 0, 196608, -65525, 0, 196608, -65524, 0, 196608, -65523, 0, 196608, -65522, 0, 196608, -65521, 0, 196608, -65520, 0, 196608, -65519, 0, 196608, -65518, 0, 196608, -65517, 0, 196608, -65516, 0, 196608, -65515, 0, 196608, -65514, 0, 196608, -65513, 0, 196608, -65512, 0, 196608, -65511, 0, 196608, -65510, 0, 196608, -65509, 0, 196608, -65508, 0, 196608, -65507, 0, 196608, -65506, 0, 196608, -65505, 0, 196608, -65504, 0, 196608, -65503, 0, 196608, -65502, 0, 196608, -65501, 0, 196608, 0, 0, 196608, 35, 0, 196608, 65536, 0, 196608, 65571, 0, 196608, 131072, 0, 196608, 131073, 0, 0, 131074, 0, 0, 131075, 0, 0, 131076, 0, 0, 131077, 0, 0, 131078, 0, 0, 131079, 0, 0, 131080, 0, 0, 131081, 0, 65536, 131100, 0, 131072, 131101, 0, 0, 131102, 0, 0, 131103, 0, 0, 131104, 0, 0, 131105, 0, 0, 131106, 0, 65536, 131107, 0, 196608, 196608, 0, 196608, 196617, 0, 196608, 196618, 0, 65536, 196643, 0, 196608, 262144, 0, 196608, 262154, 0, 196608, 262155, 0, 65536, 262161, 0, 131072, 262162, 0, 0, 262163, 0, 0, 262164, 0, 0, 262165, 0, 0, 262166, 0, 0, 262167, 0, 65536, 262179, 0, 196608, 327680, 0, 196608, 327691, 0, 196608, 327692, 0, 65536, 327715, 0, 196608, 393216, 0, 196608, 393228, 0, 196608, 393229, 0, 65536, 393240, 0, 131072, 393241, 0, 0, 393242, 0, 0, 393243, 0, 65536, 393251, 0, 196608, 458752, 0, 196608, 458765, 0, 196608, 458766, 0, 0, 458767, 0, 0, 458768, 0, 0, 458769, 0, 0, 458770, 0, 65536, 458787, 0, 196608, 458814, 0, 196608, 458815, 0, 196608, 458816, 0, 196608, 458818, 0, 196608, 458819, 0, 196608, 458820, 0, 196608, 458822, 0, 196608, 458823, 0, 196608, 458824, 0, 196608, 458826, 0, 196608, 458827, 0, 196608, 458828, 0, 196608, 524288, 0, 196608, 524318, 0, 131072, 524319, 0, 0, 524320, 0, 0, 524321, 0, 0, 524322, 0, 0, 524323, 0, 196608, 524350, 0, 196608, 524352, 0, 196608, 524354, 0, 196608, 524359, 0, 196608, 524362, 0, 196608, 589824, 0, 196608, 589859, 0, 196608, 589886, 0, 196608, 589887, 0, 196608, 589888, 0, 196608, 589890, 0, 196608, 589895, 0, 196608, 589898, 0, 196608, 589899, 0, 196608, 655360, 0, 196608, 655367, 0, 131072, 655368, 0, 0, 655369, 0, 0, 655370, 0, 0, 655371, 0, 0, 655372, 0, 0, 655373, 0, 0, 655374, 0, 65536, 655377, 0, 131072, 655378, 0, 0, 655379, 0, 0, 655380, 0, 0, 655381, 0, 65536, 655383, 0, 131072, 655384, 0, 0, 655385, 0, 0, 655386, 0, 0, 655387, 0, 0, 655388, 0, 65536, 655395, 0, 196608, 655422, 0, 196608, 655426, 0, 196608, 655431, 0, 196608, 655434, 0, 196608, 720896, 0, 196608, 720897, 0, 0, 720898, 0, 65536, 720902, 0, 131072, 720903, 0, 196608, 720926, 0, 131072, 720927, 0, 0, 720928, 0, 0, 720929, 0, 0, 720930, 0, 0, 720931, 0, 196608, 720932, 0, 196608, 720933, 0, 196608, 720934, 0, 196608, 720935, 0, 196608, 720936, 0, 196608, 720937, 0, 196608, 720938, 0, 196608, 720939, 0, 196608, 720940, 0, 196608, 720941, 0, 196608, 720942, 0, 196608, 720943, 0, 196608, 720944, 0, 0, 720945, 0, 196608, 720946, 0, 196608, 720947, 0, 196608, 720948, 0, 196608, 720949, 0, 196608, 720950, 0, 196608, 720951, 0, 196608, 720952, 0, 196608, 720953, 0, 196608, 720954, 0, 196608, 720955, 0, 196608, 720956, 0, 196608, 720957, 0, 196608, 720958, 0, 196608, 720962, 0, 196608, 720963, 0, 196608, 720964, 0, 196608, 720967, 0, 196608, 720970, 0, 196608, 786432, 0, 196608, 786434, 0, 196608, 786435, 0, 65536, 786437, 0, 131072, 786438, 0, 196608, 786467, 0, 196608, 851968, 0, 196608, 851971, 0, 196608, 851972, 0, 0, 851973, 0, 196608, 851993, 0, 131072, 851994, 0, 0, 851995, 0, 0, 851996, 0, 0, 851997, 0, 65536, 852003, 0, 196608, 852031, 0, 196608, 852032, 0, 196608, 852034, 0, 196608, 852035, 0, 196608, 852036, 0, 196608, 852038, 0, 196608, 852039, 0, 196608, 852040, 0, 196608, 852042, 0, 196608, 852046, 0, 196608, 917504, 0, 196608, 917516, 0, 131072, 917517, 0, 0, 917518, 0, 0, 917519, 0, 0, 917520, 0, 0, 917521, 0, 0, 917522, 0, 0, 917523, 0, 0, 917524, 0, 0, 917525, 0, 0, 917526, 0, 65536, 917539, 0, 196608, 917567, 0, 196608, 917571, 0, 196608, 917575, 0, 196608, 917578, 0, 196608, 917582, 0, 196608, 983040, 0, 196608, 983075, 0, 196608, 983102, 0, 196608, 983103, 0, 196608, 983107, 0, 196608, 983111, 0, 196608, 983114, 0, 196608, 983118, 0, 196608, 1048576, 0, 196608, 1048585, 0, 131072, 1048586, 0, 0, 1048587, 0, 65536, 1048603, 0, 131072, 1048604, 0, 0, 1048605, 0, 0, 1048606, 0, 0, 1048607, 0, 65536, 1048611, 0, 196608, 1048639, 0, 196608, 1048643, 0, 196608, 1048647, 0, 196608, 1048650, 0, 196608, 1048652, 0, 196608, 1048654, 0, 196608, 1114112, 0, 196608, 1114113, 0, 0, 1114114, 0, 0, 1114115, 0, 0, 1114116, 0, 0, 1114117, 0, 0, 1114118, 0, 0, 1114119, 0, 65536, 1114143, 0, 196608, 1114144, 0, 0, 1114145, 0, 0, 1114146, 0, 0, 1114147, 0, 196608, 1114175, 0, 196608, 1114176, 0, 196608, 1114178, 0, 196608, 1114179, 0, 196608, 1114180, 0, 196608, 1114183, 0, 196608, 1114187, 0, 196608, 1114189, 0, 196608, 1179648, 0, 196608, 1179662, 0, 131072, 1179663, 0, 0, 1179664, 0, 0, 1179665, 0, 0, 1179666, 0, 0, 1179667, 0, 0, 1179668, 0, 0, 1179669, 0, 65536, 1179683, 0, 196608, 1245184, 0, 196608, 1245185, 0, 0, 1245186, 0, 0, 1245187, 0, 0, 1245188, 0, 0, 1245189, 0, 0, 1245190, 0, 0, 1245191, 0, 0, 1245192, 0, 0, 1245193, 0, 0, 1245194, 0, 0, 1245195, 0, 0, 1245196, 0, 0, 1245197, 0, 0, 1245198, 0, 262144, 1245199, 0, 196608, 1245200, 0, 196608, 1245201, 0, 196608, 1245202, 0, 196608, 1245203, 0, 196608, 1245204, 0, 196608, 1245205, 0, 196608, 1245206, 0, 0, 1245207, 0, 0, 1245208, 0, 0, 1245209, 0, 0, 1245210, 0, 0, 1245211, 0, 0, 1245212, 0, 0, 1245213, 0, 0, 1245214, 0, 0, 1245215, 0, 0, 1245216, 0, 0, 1245217, 0, 0, 1245218, 0, 0, 1245219, 0, 196608, 1245246, 0, 196608, 1245247, 0, 196608, 1245248, 0, 196608, 1245250, 0, 196608, 1245251, 0, 196608, 1245252, 0, 196608, 1245254, 0, 196608, 1245255, 0, 196608, 1245256, 0, 196608, 1245258, 0, 196608, 1245259, 0, 196608, 1245260, 0, 196608, 1310720, 0, 196608, 1310721, 0, 196608, 1310722, 0, 196608, 1310723, 0, 196608, 1310724, 0, 196608, 1310725, 0, 196608, 1310726, 0, 196608, 1310727, 0, 196608, 1310728, 0, 196608, 1310729, 0, 196608, 1310730, 0, 196608, 1310731, 0, 196608, 1310732, 0, 196608, 1310733, 0, 196608, 1310734, 0, 196608, 1310735, 0, 196608, 1310736, 0, 196608, 1310737, 0, 196608, 1310738, 0, 196608, 1310739, 0, 196608, 1310740, 0, 196608, 1310741, 0, 196608, 1310742, 0, 196608, 1310743, 0, 196608, 1310744, 0, 196608, 1310745, 0, 196608, 1310746, 0, 196608, 1310747, 0, 196608, 1310748, 0, 196608, 1310749, 0, 196608, 1310750, 0, 196608, 1310751, 0, 196608, 1310752, 0, 196608, 1310753, 0, 196608, 1310754, 0, 196608, 1310755, 0, 196608, 1310782, 0, 196608, 1310784, 0, 196608, 1310786, 0, 196608, 1310791, 0, 196608, 1310795, 0, 196608, 1376318, 0, 196608, 1376319, 0, 196608, 1376320, 0, 196608, 1376322, 0, 196608, 1376323, 0, 196608, 1376324, 0, 196608, 1376327, 0, 196608, 1376331, 0, 196608, 1441854, 0, 196608, 1441855, 0, 196608, 1441856, 0, 196608, 1441860, 0, 196608, 1441863, 0, 196608, 1441867, 0, 196608, 1507390, 0, 196608, 1507392, 0, 196608, 1507394, 0, 196608, 1507395, 0, 196608, 1507396, 0, 196608, 1507399, 0, 196608, 1507402, 0, 196608, 1507403, 0, 196608, 1507404, 0, 196608, 1638463, 0, 196608, 1638465, 0, 196608, 1638468, 0, 196608, 1638469, 0, 196608, 1638470, 0, 196608, 1638472, 0, 196608, 1638473, 0, 196608, 1638474, 0, 196608, 1638476, 0, 196608, 1638477, 0, 196608, 1638478, 0, 196608, 1703998, 0, 196608, 1704000, 0, 196608, 1704002, 0, 196608, 1704004, 0, 196608, 1704008, 0, 196608, 1704012, 0, 196608, 1704014, 0, 196608, 1769534, 0, 196608, 1769536, 0, 196608, 1769538, 0, 196608, 1769540, 0, 196608, 1769541, 0, 196608, 1769544, 0, 196608, 1769545, 0, 196608, 1769548, 0, 196608, 1769550, 0, 196608, 1835070, 0, 196608, 1835072, 0, 196608, 1835074, 0, 196608, 1835076, 0, 196608, 1835080, 0, 196608, 1835084, 0, 196608, 1835086, 0, 196608, 1900606, 0, 196608, 1900608, 0, 196608, 1900610, 0, 196608, 1900612, 0, 196608, 1900613, 0, 196608, 1900614, 0, 196608, 1900616, 0, 196608, 1900620, 0, 196608, 1900621, 0, 196608, 1900622, 0, 196608, 2031678, 0, 196608, 2031679, 0, 196608, 2031680, 0, 196608, 2031682, 0, 196608, 2031683, 0, 196608, 2031684, 0, 196608, 2031686, 0, 196608, 2031688, 0, 196608, 2031690, 0, 196608, 2031691, 0, 196608, 2031692, 0, 196608, 2097214, 0, 196608, 2097216, 0, 196608, 2097219, 0, 196608, 2097222, 0, 196608, 2097224, 0, 196608, 2097226, 0, 196608, 2097228, 0, 196608, 2162750, 0, 196608, 2162751, 0, 196608, 2162752, 0, 196608, 2162755, 0, 196608, 2162758, 0, 196608, 2162759, 0, 196608, 2162760, 0, 196608, 2162762, 0, 196608, 2162764, 0, 196608, 2228286, 0, 196608, 2228287, 0, 196608, 2228291, 0, 196608, 2228294, 0, 196608, 2228296, 0, 196608, 2228298, 0, 196608, 2228300, 0, 196608, 2293822, 0, 196608, 2293824, 0, 196608, 2293827, 0, 196608, 2293830, 0, 196608, 2293832, 0, 196608, 2293834, 0, 196608, 2293835, 0, 196608, 2293836, 0, 196608, 2424895, 0, 196608, 2424897, 0, 196608, 2424900, 0, 196608, 2424901, 0, 196608, 2424902, 0, 196608, 2424904, 0, 196608, 2424905, 0, 196608, 2424906, 0, 196608, 2424908, 0, 196608, 2424909, 0, 196608, 2424910, 0, 196608, 2490430, 0, 196608, 2490432, 0, 196608, 2490434, 0, 196608, 2490436, 0, 196608, 2490438, 0, 196608, 2490440, 0, 196608, 2490445, 0, 196608, 2555966, 0, 196608, 2555968, 0, 196608, 2555970, 0, 196608, 2555972, 0, 196608, 2555973, 0, 196608, 2555974, 0, 196608, 2555976, 0, 196608, 2555977, 0, 196608, 2555978, 0, 196608, 2555981, 0, 196608, 2621502, 0, 196608, 2621504, 0, 196608, 2621506, 0, 196608, 2621508, 0, 196608, 2621510, 0, 196608, 2621514, 0, 196608, 2621517, 0, 196608, 2687038, 0, 196608, 2687040, 0, 196608, 2687042, 0, 196608, 2687044, 0, 196608, 2687046, 0, 196608, 2687048, 0, 196608, 2687049, 0, 196608, 2687050, 0, 196608, 2687053, 0, 196608, 2818110, 0, 196608, 2818111, 0, 196608, 2818112, 0, 196608, 2818114, 0, 196608, 2818115, 0, 196608, 2818116, 0, 196608, 2818117, 0, 196608, 2818119, 0, 196608, 2818120, 0, 196608, 2818121, 0, 196608, 2883646, 0, 196608, 2883648, 0, 196608, 2883650, 0, 196608, 2883655, 0, 196608, 2883657, 0, 196608, 2949182, 0, 196608, 2949184, 0, 196608, 2949186, 0, 196608, 2949191, 0, 196608, 2949193, 0, 196608, 3014718, 0, 196608, 3014720, 0, 196608, 3014722, 0, 196608, 3014724, 0, 196608, 3014725, 0, 196608, 3014727, 0, 196608, 3014729, 0, 196608, 3080254, 0, 196608, 3080256, 0, 196608, 3080258, 0, 196608, 3080261, 0, 196608, 3080263, 0, 196608, 3080265, 0, 196608, 3145790, 0, 196608, 3145791, 0, 196608, 3145792, 0, 196608, 3145794, 0, 196608, 3145795, 0, 196608, 3145796, 0, 196608, 3145797, 0, 196608, 3145799, 0, 196608, 3145800, 0, 196608, 3145801, 0, 196608, 3145803, 0, 196608, 3145804, 0, 196608, 3145805, 0, 196608, 3276862, 0, 196608, 3276864, 0, 196608, 3276866, 0, 196608, 3276867, 0, 196608, 3276868, 0, 196608, 3276870, 0, 196608, 3276872, 0, 196608, 3276874, 0, 196608, 3276875, 0, 196608, 3276876, 0, 196608, 3342398, 0, 196608, 3342400, 0, 196608, 3342402, 0, 196608, 3342406, 0, 196608, 3342408, 0, 196608, 3342410, 0, 196608, 3342412, 0, 196608, 3407934, 0, 196608, 3407935, 0, 196608, 3407936, 0, 196608, 3407938, 0, 196608, 3407939, 0, 196608, 3407942, 0, 196608, 3407943, 0, 196608, 3407944, 0, 196608, 3407946, 0, 196608, 3407947, 0, 196608, 3407948, 0, 196608, 3473470, 0, 196608, 3473472, 0, 196608, 3473474, 0, 196608, 3473478, 0, 196608, 3473480, 0, 196608, 3473482, 0, 196608, 3473484, 0, 196608, 3539006, 0, 196608, 3539008, 0, 196608, 3539010, 0, 196608, 3539014, 0, 196608, 3539016, 0, 196608, 3539018, 0, 196608, 3539020, 0, 196608, 3604542, 0, 196608, 3604544, 0, 196608, 3604546, 0, 196608, 3604547, 0, 196608, 3604548, 0, 196608, 3604550, 0, 196608, 3604552, 0, 196608, 3604554, 0, 196608, 3604556, 0, 196608, 3735614, 0, 196608, 3735615, 0, 196608, 3735618, 0, 196608, 3735619, 0, 196608, 3735620, 0, 196608, 3735622, 0, 196608, 3735623, 0, 196608, 3735624, 0, 196608, 3735626, 0, 196608, 3735627, 0, 196608, 3735628, 0, 196608, 3801150, 0, 196608, 3801152, 0, 196608, 3801154, 0, 196608, 3801158, 0, 196608, 3801162, 0, 196608, 3866686, 0, 196608, 3866688, 0, 196608, 3866690, 0, 196608, 3866691, 0, 196608, 3866692, 0, 196608, 3866694, 0, 196608, 3866695, 0, 196608, 3866698, 0, 196608, 3866699, 0, 196608, 3932222, 0, 196608, 3932224, 0, 196608, 3932228, 0, 196608, 3932230, 0, 196608, 3932234, 0, 196608, 3997758, 0, 196608, 3997759, 0, 196608, 3997762, 0, 196608, 3997763, 0, 196608, 3997764, 0, 196608, 3997766, 0, 196608, 3997767, 0, 196608, 3997768, 0, 196608, 3997770, 0, 196608, 3997771, 0, 196608, 3997772, 0, 196608, 4128830, 0, 196608, 4128833, 0, 196608, 4128835, 0, 196608, 4128836, 0, 196608, 4128837, 0, 196608, 4128839, 0, 196608, 4128841, 0, 196608, 4128843, 0, 196608, 4128844, 0, 196608, 4128845, 0, 196608, 4194366, 0, 196608, 4194367, 0, 196608, 4194369, 0, 196608, 4194371, 0, 196608, 4194375, 0, 196608, 4194377, 0, 196608, 4194379, 0, 196608, 4259902, 0, 196608, 4259904, 0, 196608, 4259905, 0, 196608, 4259907, 0, 196608, 4259908, 0, 196608, 4259911, 0, 196608, 4259913, 0, 196608, 4259915, 0, 196608, 4259916, 0, 196608, 4325438, 0, 196608, 4325441, 0, 196608, 4325443, 0, 196608, 4325447, 0, 196608, 4325449, 0, 196608, 4325451, 0, 196608, 4390974, 0, 196608, 4390977, 0, 196608, 4390979, 0, 196608, 4390980, 0, 196608, 4390981, 0, 196608, 4390984, 0, 196608, 4390987, 0, 196608, 4390988, 0, 196608, 4390989, 0, 196608, 4522046, 0, 196608, 4522047, 0, 196608, 4522048, 0, 196608, 4522050, 0, 196608, 4522052, 0, 196608, 4522054, 0, 196608, 4522055, 0, 196608, 4522056, 0, 196608, 4522058, 0, 196608, 4522060, 0, 196608, 4587582, 0, 196608, 4587584, 0, 196608, 4587586, 0, 196608, 4587587, 0, 196608, 4587588, 0, 196608, 4587591, 0, 196608, 4587594, 0, 196608, 4587596, 0, 196608, 4653118, 0, 196608, 4653119, 0, 196608, 4653120, 0, 196608, 4653123, 0, 196608, 4653127, 0, 196608, 4653130, 0, 196608, 4653131, 0, 196608, 4653132, 0, 196608, 4718654, 0, 196608, 4718655, 0, 196608, 4718659, 0, 196608, 4718663, 0, 196608, 4718666, 0, 196608, 4718668, 0, 196608, 4784190, 0, 196608, 4784192, 0, 196608, 4784195, 0, 196608, 4784199, 0, 196608, 4784202, 0, 196608, 4784204, 0, 196608, 4915262, 0, 196608, 4915263, 0, 196608, 4915264, 0, 196608, 4915266, 0, 196608, 4915269, 0, 196608, 4915271, 0, 196608, 4915272, 0, 196608, 4915273, 0, 196608, 4915274, 0, 196608, 4915276, 0, 196608, 4915277, 0, 196608, 4980799, 0, 196608, 4980802, 0, 196608, 4980803, 0, 196608, 4980805, 0, 196608, 4980807, 0, 196608, 4980813, 0, 196608, 5046335, 0, 196608, 5046338, 0, 196608, 5046340, 0, 196608, 5046341, 0, 196608, 5046343, 0, 196608, 5046345, 0, 196608, 5046346, 0, 196608, 5046349, 0, 196608, 5046350, 0, 196608, 5111871, 0, 196608, 5111874, 0, 196608, 5111877, 0, 196608, 5111879, 0, 196608, 5111882, 0, 196608, 5111885, 0, 196608, 5177406, 0, 196608, 5177407, 0, 196608, 5177408, 0, 196608, 5177410, 0, 196608, 5177413, 0, 196608, 5177415, 0, 196608, 5177416, 0, 196608, 5177417, 0, 196608, 5177418, 0, 196608, 5177420, 0, 196608, 5177421, 0, 196608 )
extends KinematicBody2D
# Constants and Enumerations
const GRAVITY                   = 348.0
const RUN_SPEED                 = 200.0
const JUMP_SPEED                = 224.0
# Global Variables
var g_direction
var g_velocity
var g_parent
var g_airborne
var g_delta
var g_cheat_stack
var g_god_mode
var key_evt_map = {
        "W":["up_evt_press","up_evt_release"],
        "A":["left_evt_press", "left_evt_release"],
        "S":["down_evt_press", "down_evt_release"],
        "D":["right_evt_press", "right_evt_release"],
        "Left":["left_action_evt_press", "left_action_evt_release"],
        "Right":["right_action_evt_press", "right_action_evt_release"],
        "Up":["up_action_evt_press", "up_action_evt_release"],
        "Down":["down_action_evt_press", "down_action_evt_release"],
		"P":["p_evt_press", "p_evt_release"],
		"U":["u_evt_press", "u_evt_release"],
		"R":["r_evt_press", "r_evt_release"],
		"G":["g_evt_press", "g_evt_release"],
		"0":["zero_evt_press", "zero_evt_release"]
# User-Defined Functions
func on_finished(anim_name):
	pass
	#print("N", anim_name)
func on_changed(old_name, new_name):
	pass
	#print(old_name, new_name)
func on_started(anim_name):
	pass
	#print("S", anim_name)
func generate_key_event(ev):
	if ev is InputEventKey and OS.get_scancode_string(ev.scancode) in self.key_evt_map:
		if ev.pressed:
			self.call(self.key_evt_map[OS.get_scancode_string(ev.scancode)][0])
		else:
			self.call(self.key_evt_map[OS.get_scancode_string(ev.scancode)][1])
func up_evt_press():
	Input.action_press("up")
func left_evt_press():
	Input.action_press("left")
func down_evt_press():
	Input.action_press("down")
func right_evt_press():
	Input.action_press("right")
func left_action_evt_press():
	Input.action_press("left_action")
func right_action_evt_press():
	Input.action_press("right_action")
func up_action_evt_press():
	Input.action_press("up_action")
func down_action_evt_press():
	Input.action_press("down_action")
func up_evt_release():
	Input.action_release("up")
func left_evt_release():
	Input.action_release("left")
func down_evt_release():
	Input.action_release("down")
func right_evt_release():
	Input.action_release("right")
func left_action_evt_release():
	Input.action_release("left_action")
func right_action_evt_release():
	Input.action_release("right_action")
func up_action_evt_release():
	Input.action_release("up_action")
func down_action_evt_release():
	Input.action_release("down_action")
# Cheat Code Events
func p_evt_press():
	self.g_cheat_stack.clear()
func p_evt_release():
	self.g_cheat_stack.push_back("P")
func u_evt_press():
	pass
func u_evt_release():
	self.g_cheat_stack.push_back("U")
func r_evt_press():
	pass
func r_evt_release():
	self.g_cheat_stack.push_back("R")
func g_evt_press():
	pass
func g_evt_release():
	self.g_cheat_stack.push_back("G")
func zero_evt_press():
	pass
func zero_evt_release():
	self.g_cheat_stack.push_back("0")
	if self.g_cheat_stack == ["P", "U", "R", "G", "0", "0"]:
		self.g_god_mode = not self.g_god_mode
		$CollisionShape2D.disabled = not $CollisionShape2D.disabled
# Ground Raycasting
func raycast_floor():
	return $RayCast2D.is_colliding()
func _ready():
	self.g_velocity = Vector2()
	self.g_parent = get_node("..")
	self.g_airborne = false
	self.g_cheat_stack = Array()
	self.g_god_mode = false
func _input(ev):
	self.generate_key_event(ev)
func _physics_process(delta):
	if Input.is_action_pressed("left"):
		self.g_velocity.x = -RUN_SPEED
	elif Input.is_action_pressed("right"):
		self.g_velocity.x = RUN_SPEED
	else:
		self.g_velocity.x = 0
	if Input.is_action_pressed("up") and not self.g_airborne and not self.g_god_mode:
		self.g_velocity.y -= JUMP_SPEED
		self.g_airborne = true
	if Input.is_action_pressed("up") and self.g_god_mode:
		self.g_velocity.y = -JUMP_SPEED
	elif Input.is_action_pressed("down") and self.g_god_mode:
		self.g_velocity.y = JUMP_SPEED
	elif self.g_god_mode:
		self.g_velocity.y = 0
	if not self.g_god_mode:
		self.g_velocity.y += GRAVITY * delta
	move_and_slide(self.g_velocity, Vector2(0, -1))
	if is_on_floor() or raycast_floor():
		if not self.g_god_mode:
			self.g_velocity.y = GRAVITY * delta
		self.g_airborne = false
	else:
		self.g_airborne = true
[gd_scene load_steps=3 format=2]
[ext_resource path="res://Player.tscn" type="PackedScene" id=1]
[ext_resource path="res://Environment.tscn" type="PackedScene" id=2]
[node name="Main" type="Node2D"]
[node name="Player" parent="." instance=ExtResource( 1 )]
position = Vector2( 115.918, 94.7716 )
[node name="Environment" parent="." instance=ExtResource( 2 )]
GDST@
PNG 
IHDR
IDATx
 E@	
!@"y3i
Dmwk
{O@)
IEND
[remap]
importer="texture"
type="StreamTexture"
path="res://.import/Player.png-3b381e068d1d74cc2895fb9be41402b0.stex"
metadata={
"vram_texture": false
[deps]
source_file="res://Player.png"
dest_files=[ "res://.import/Player.png-3b381e068d1d74cc2895fb9be41402b0.stex" ]
[params]
compress/mode=0
compress/lossy_quality=0.7
compress/hdr_mode=0
compress/bptc_ldr=0
compress/normal_map=0
flags/repeat=0
flags/filter=false
flags/mipmaps=false
flags/anisotropic=false
flags/srgb=2
process/fix_alpha_border=true
process/premult_alpha=false
process/HDR_as_SRGB=false
process/invert_color=false
stream=false
size_limit=0
detect_3d=false
svg/scale=1.0
[gd_scene load_steps=4 format=2]
[ext_resource path="res://KinematicBody2D.gd" type="Script" id=1]
[ext_resource path="res://Player.png" type="Texture" id=2]
[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 13.6616, 30.0094 )
[node name="Player" type="Node2D"]
[node name="KinematicBody2D" type="KinematicBody2D" parent="."]
script = ExtResource( 1 )
[node name="Sprite" type="Sprite" parent="KinematicBody2D"]
texture = ExtResource( 2 )
[node name="CollisionShape2D" type="CollisionShape2D" parent="KinematicBody2D"]
shape = SubResource( 1 )
[node name="RayCast2D" type="RayCast2D" parent="KinematicBody2D"]
position = Vector2( -0.166103, 30.2115 )
enabled = true
cast_to = Vector2( 0, 1.12 )
collide_with_areas = true
[node name="Camera2D" type="Camera2D" parent="KinematicBody2D"]
offset = Vector2( -243.58, -141.89 )
anchor_mode = 0
current = true
zoom = Vector2( 0.5, 0.5 )
GDST@
PNG 
IHDR
eIDATx
jwuqqQc
;?Sn
A=Fa{
	MwP
&\]]M
]\\L i^
mBk$h
\[hT@ww
`5 $
NNOq
4!(	Fl\V
"s0a
Kdh9aT
b@`Bt
!LY"
K%!xE
^Q-6
9GXT
bZ@b
}{#5
fu6BN
lU 2
MF1 
WgL5
.`NA
&7}/0g
}K=e5
RY6b
9x p Tj
-x@3`
< Kbb
IEND
[remap]
importer="texture"
type="StreamTexture"
path="res://.import/Track.png-fed121f0a31352199537697db8c96450.stex"
metadata={
"vram_texture": false
[deps]
source_file="res://Track.png"
dest_files=[ "res://.import/Track.png-fed121f0a31352199537697db8c96450.stex" ]
[params]
compress/mode=0
compress/lossy_quality=0.7
compress/hdr_mode=0
compress/bptc_ldr=0
compress/normal_map=0
flags/repeat=0
flags/filter=false
flags/mipmaps=false
flags/anisotropic=false
flags/srgb=2
process/fix_alpha_border=true
process/premult_alpha=false
process/HDR_as_SRGB=false
process/invert_color=false
stream=false
size_limit=0
detect_3d=false
svg/scale=1.0
IHDR
5IDATx
Ev1D
xenfb
]\.g+b
r*Ve
J$MT
\^dK
'.}6
4%u5
yEXXR
r3Fi
Dy\?
ra	V.,Amc+~
g.+/
k*d%
0R8Z
1Tq/
Q>~a#b
FlZ}
)q(xk
ZzJ"6
Z:a0
#=%a
](d#
W!U.Dv
1#S	
p{a2
F?*r
`YY1._
elu*
a<E7
Z5cZ
Ks]K
P!Fx(
tk-8
<d(F
FGX/
4ti-x
Ms}6
d(Dxn
\l_>3
D"dff
%lNN6
hkkw
q\XP
m(**
6"-m
6l{p
#U6z1
?r^c
h";1
wPew
1X=G
R!/`
' M>
eK2e8
AD4)q
x~}b
2\eY
#CT	
2!f$
r8XXR
gfbq
,,,)
%' -9
p	CVj
mK;h
Cr>$
_E?k
(Ktll
<ADb
*[,W^
 ^%0
w]?{
rFVR
r|Uj
IEND
ECFG
_global_script_classes
_global_script_class_icons
application/config/name
DankEngine
application/run/main_scene
res://Main.tscn
application/config/icon
res://icon.png
rendering/environment/default_environment 
res://default_env.tres
GDPC
